services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: thread_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - thread_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session management
  redis:
    image: redis:7-alpine
    container_name: thread_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - thread_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build: .
    container_name: thread_app
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
      - node_modules:/app/node_modules
    networks:
      - thread_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  node_modules:

networks:
  thread_network:
    driver: bridge
